# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import debug_pb2 as mantik_dot_engine_dot_debug__pb2


class DebugServiceStub(object):
    """Service for debugging, won't be available in future. 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddLocalMantikDirectory = channel.unary_unary(
                '/ai.mantik.engine.protos.DebugService/AddLocalMantikDirectory',
                request_serializer=mantik_dot_engine_dot_debug__pb2.AddLocalMantikDirectoryRequest.SerializeToString,
                response_deserializer=mantik_dot_engine_dot_debug__pb2.AddLocalMantikDirectoryResponse.FromString,
                )


class DebugServiceServicer(object):
    """Service for debugging, won't be available in future. 
    """

    def AddLocalMantikDirectory(self, request, context):
        """Add a local directory to the repository
        This call is available because the current repository is temporary only
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DebugServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddLocalMantikDirectory': grpc.unary_unary_rpc_method_handler(
                    servicer.AddLocalMantikDirectory,
                    request_deserializer=mantik_dot_engine_dot_debug__pb2.AddLocalMantikDirectoryRequest.FromString,
                    response_serializer=mantik_dot_engine_dot_debug__pb2.AddLocalMantikDirectoryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ai.mantik.engine.protos.DebugService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DebugService(object):
    """Service for debugging, won't be available in future. 
    """

    @staticmethod
    def AddLocalMantikDirectory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.mantik.engine.protos.DebugService/AddLocalMantikDirectory',
            mantik_dot_engine_dot_debug__pb2.AddLocalMantikDirectoryRequest.SerializeToString,
            mantik_dot_engine_dot_debug__pb2.AddLocalMantikDirectoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
