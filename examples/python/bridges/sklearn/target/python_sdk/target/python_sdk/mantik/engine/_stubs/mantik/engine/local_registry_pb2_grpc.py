# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import local_registry_pb2 as mantik_dot_engine_dot_local__registry__pb2


class LocalRegistryServiceStub(object):
    """The local Mantik Registry, contains all Mantik Artifacts managed by Mantik
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetArtifact = channel.unary_unary(
                '/ai.mantik.engine.protos.LocalRegistryService/GetArtifact',
                request_serializer=mantik_dot_engine_dot_local__registry__pb2.GetArtifactRequest.SerializeToString,
                response_deserializer=mantik_dot_engine_dot_local__registry__pb2.GetArtifactResponse.FromString,
                )
        self.TagArtifact = channel.unary_unary(
                '/ai.mantik.engine.protos.LocalRegistryService/TagArtifact',
                request_serializer=mantik_dot_engine_dot_local__registry__pb2.TagArtifactRequest.SerializeToString,
                response_deserializer=mantik_dot_engine_dot_local__registry__pb2.TagArtifactResponse.FromString,
                )
        self.ListArtifacts = channel.unary_unary(
                '/ai.mantik.engine.protos.LocalRegistryService/ListArtifacts',
                request_serializer=mantik_dot_engine_dot_local__registry__pb2.ListArtifactsRequest.SerializeToString,
                response_deserializer=mantik_dot_engine_dot_local__registry__pb2.ListArtifactResponse.FromString,
                )
        self.AddArtifact = channel.stream_unary(
                '/ai.mantik.engine.protos.LocalRegistryService/AddArtifact',
                request_serializer=mantik_dot_engine_dot_local__registry__pb2.AddArtifactRequest.SerializeToString,
                response_deserializer=mantik_dot_engine_dot_local__registry__pb2.AddArtifactResponse.FromString,
                )
        self.GetArtifactWithPayload = channel.unary_stream(
                '/ai.mantik.engine.protos.LocalRegistryService/GetArtifactWithPayload',
                request_serializer=mantik_dot_engine_dot_local__registry__pb2.GetArtifactRequest.SerializeToString,
                response_deserializer=mantik_dot_engine_dot_local__registry__pb2.GetArtifactWithPayloadResponse.FromString,
                )


class LocalRegistryServiceServicer(object):
    """The local Mantik Registry, contains all Mantik Artifacts managed by Mantik
    """

    def GetArtifact(self, request, context):
        """Returns a single artifact.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TagArtifact(self, request, context):
        """Tag a single artifact
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListArtifacts(self, request, context):
        """List artifacts
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddArtifact(self, request_iterator, context):
        """Add an artifact
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetArtifactWithPayload(self, request, context):
        """Get an Artifact including payload
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LocalRegistryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetArtifact': grpc.unary_unary_rpc_method_handler(
                    servicer.GetArtifact,
                    request_deserializer=mantik_dot_engine_dot_local__registry__pb2.GetArtifactRequest.FromString,
                    response_serializer=mantik_dot_engine_dot_local__registry__pb2.GetArtifactResponse.SerializeToString,
            ),
            'TagArtifact': grpc.unary_unary_rpc_method_handler(
                    servicer.TagArtifact,
                    request_deserializer=mantik_dot_engine_dot_local__registry__pb2.TagArtifactRequest.FromString,
                    response_serializer=mantik_dot_engine_dot_local__registry__pb2.TagArtifactResponse.SerializeToString,
            ),
            'ListArtifacts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListArtifacts,
                    request_deserializer=mantik_dot_engine_dot_local__registry__pb2.ListArtifactsRequest.FromString,
                    response_serializer=mantik_dot_engine_dot_local__registry__pb2.ListArtifactResponse.SerializeToString,
            ),
            'AddArtifact': grpc.stream_unary_rpc_method_handler(
                    servicer.AddArtifact,
                    request_deserializer=mantik_dot_engine_dot_local__registry__pb2.AddArtifactRequest.FromString,
                    response_serializer=mantik_dot_engine_dot_local__registry__pb2.AddArtifactResponse.SerializeToString,
            ),
            'GetArtifactWithPayload': grpc.unary_stream_rpc_method_handler(
                    servicer.GetArtifactWithPayload,
                    request_deserializer=mantik_dot_engine_dot_local__registry__pb2.GetArtifactRequest.FromString,
                    response_serializer=mantik_dot_engine_dot_local__registry__pb2.GetArtifactWithPayloadResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ai.mantik.engine.protos.LocalRegistryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LocalRegistryService(object):
    """The local Mantik Registry, contains all Mantik Artifacts managed by Mantik
    """

    @staticmethod
    def GetArtifact(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.mantik.engine.protos.LocalRegistryService/GetArtifact',
            mantik_dot_engine_dot_local__registry__pb2.GetArtifactRequest.SerializeToString,
            mantik_dot_engine_dot_local__registry__pb2.GetArtifactResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TagArtifact(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.mantik.engine.protos.LocalRegistryService/TagArtifact',
            mantik_dot_engine_dot_local__registry__pb2.TagArtifactRequest.SerializeToString,
            mantik_dot_engine_dot_local__registry__pb2.TagArtifactResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListArtifacts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.mantik.engine.protos.LocalRegistryService/ListArtifacts',
            mantik_dot_engine_dot_local__registry__pb2.ListArtifactsRequest.SerializeToString,
            mantik_dot_engine_dot_local__registry__pb2.ListArtifactResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddArtifact(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/ai.mantik.engine.protos.LocalRegistryService/AddArtifact',
            mantik_dot_engine_dot_local__registry__pb2.AddArtifactRequest.SerializeToString,
            mantik_dot_engine_dot_local__registry__pb2.AddArtifactResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetArtifactWithPayload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ai.mantik.engine.protos.LocalRegistryService/GetArtifactWithPayload',
            mantik_dot_engine_dot_local__registry__pb2.GetArtifactRequest.SerializeToString,
            mantik_dot_engine_dot_local__registry__pb2.GetArtifactWithPayloadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
